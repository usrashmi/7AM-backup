{
	"info": {
		"_postman_id": "66b61d52-14e4-41ce-a6a9-fb2b0c1a9c80",
		"name": "FUZZ TESTING",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HR.COM",
			"item": [
				{
					"name": "LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if the response has response body\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if the response body has a valid JSON\", function () {\r",
									"     pm.response.to.be.json;\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "SIGN UP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USERS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 12_0_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.0 Safari/605.1.15",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SINGLE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if first_name is string\", () => {\r",
									"    //parse the response JSON and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.data.first_name).to.be.a('string');\r",
									"    pm.expect(responseJson.data.id).to.be.a('number');\r",
									"   // pm.expect(responseJson.data.id).to.be.null;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users/5",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomNamePrefix}} {{$randomFirstName}}\",\r\n    \"job\": \"{{$randomJobTitle}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "User",
								"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"job\": \"{{$randomJobDescriptor}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/756",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"756"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"user-agent": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://reqres.in/api/users/{{$randomInt}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{$randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AUTH APIs",
			"item": [
				{
					"name": "BASIC AUTH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{$randomUserName}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://httpbin.org/basic-auth/user/passwd",
							"protocol": "https",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"basic-auth",
								"user",
								"passwd"
							]
						},
						"description": "This is a RESTful API that uses Basic Authorization to get server response"
					},
					"response": []
				},
				{
					"name": "BEARER TOKEN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{$randomWord}} {{$randomInt}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{$randomProtocol}}://httpbin.org/bearer",
							"protocol": "{{$randomProtocol}}",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"bearer"
							]
						},
						"description": "This is a RESTful API that uses **Bearer Token Authorization** to get server response"
					},
					"response": []
				},
				{
					"name": "DIGEST AUTH",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "digest",
							"digest": [
								{
									"key": "password",
									"value": "{{$randomPassword}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{$randomUserName}}",
									"type": "string"
								},
								{
									"key": "qop",
									"value": "auth",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "MD5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{$randomProtocol}}://httpbin.org/digest-auth/auth/user/passwd",
							"protocol": "{{$randomProtocol}}",
							"host": [
								"httpbin",
								"org"
							],
							"path": [
								"digest-auth",
								"auth",
								"user",
								"passwd"
							]
						},
						"description": "This is a RESTful API that uses Digest Authorization to get server response"
					},
					"response": []
				}
			],
			"description": "This folder consists of all positive test scenarios to test the secured **REST APIs.**",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "HTML-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// java-scripts //chai library //english lang\r",
							"// order of execution in postman : API Request --> API Response --> Tests\r",
							"\r",
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"html\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Herman Melville - Moby-Dick\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/html; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{$randomProtocol}}://httpbin.org/html",
					"protocol": "{{$randomProtocol}}",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"html"
					]
				}
			},
			"response": []
		},
		{
			"name": "XML-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"xml\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Sample Slide Show\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Wake up to WonderWidgets!\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/xml\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{$randomProtocol}}://httpbin.org/xml",
					"protocol": "{{$randomProtocol}}",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "JSON-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"slideshow\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Wake up to WonderWidgets!\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{$randomProtocol}}://httpbin.org/json",
					"protocol": "{{$randomProtocol}}",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "TEXT-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User-agent\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Disallow\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{$randomProtocol}}://httpbin.org/robots.txt",
					"protocol": "{{$randomProtocol}}",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"robots.txt"
					]
				}
			},
			"response": []
		}
	]
}